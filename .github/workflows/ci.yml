name: CI

on:
  issue_comment:
    types: [created]

jobs:
  test:
    # PRのコメントで「テスト実行」が含まれている場合のみ実行
    if: github.event.issue.pull_request && contains(github.event.comment.body, 'テスト実行')
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/apps_script_hub_test_db
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_TEST_DB: apps_script_hub_test_db
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      AUTH_SECRET: test-secret-for-ci

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: apps_script_hub_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Get PR info
        uses: actions/github-script@v7
        id: pr
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return pr.data;

      - name: React to comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ fromJson(steps.pr.outputs.result).head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Compile Paraglide messages
        run: npm run paraglide:compile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Setup test database
        run: npm run test:e2e:setup

      - name: Run tests
        run: npm run test

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run check

      - name: Comment result
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = '${{ job.status }}';
            const emoji = conclusion === 'success' ? '✅' : '❌';
            const message = conclusion === 'success' 
              ? `${emoji} テストが完了しました！すべてのチェックが通りました。`
              : `${emoji} テストが失敗しました。詳細はワークフロー実行ログを確認してください。`;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
